
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Colin Chisholm is a manager with the Aleza Lake Research Forest (ALRF) and Adjunct Professor in the Department of Ecosystem Science and Management at the University of Northern British Columbia.\nIn this position Colin has the privilege of working with a great team; of collaborating with researchers, internal and external to UNBC; to manage a wide variety of responsibilities; and has the opportunity to pursue numerous interests.\nExamples include:\nStrategic land management, influencing what the land will look like across the whole forest and through time. Forest stand management, through all stages of harvest planning, regeneration, and stand tending. With the support of the ALRF, Colin completed his MSc under the supervision of UNBC’s Dr. Che Elkin. Guest lecturing in various UNBC classes and professional development conferences (e.g. Association of BC Forest Professionals AGM, Northern Silviculture committee) Working with the British Columbia BEC team on methods related Predictive Ecosystem Mapping (PEM) These pages are often more for personal reference and a place to keep bits of information that I need to look back at from time-to-time.\nI hope that there is something here that you might also find useful!\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Colin Chisholm is a manager with the Aleza Lake Research Forest (ALRF) and Adjunct Professor in the Department of Ecosystem Science and Management at the University of Northern British Columbia.","tags":null,"title":"Colin Chisholm RPF","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://chisholm.forestecosystems.ca/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":["linux","cloud","cli"],"content":"From linux But just remember – easy to run in windows (e.g. have an ubuntu terminal installed)\nfind trying to find where those files are?\nfind \u0026lt;dir\u0026gt; -name \u0026#34;*pattern*\u0026#34; ## use wildcards * Find files of a certain name/pattern/type – with the text pattern you are looking for. In the example, I search for Rmd files that call ggplot. See this StackExchange post for more details\ngrep --include=\\*.{tyoe} -rnw \u0026#39;/path/to/somewhere/\u0026#39; -e \u0026#34;pattern\u0026#34; grep --include=\\*.Rmd -rnw . -e \u0026#34;ggplot\u0026#34; rsync I often share Rmarkdown reports via a website or cloud folder, but managing the changes and ensuring the website is up-to-date can be a bit of a pain. This is where rsync is awesome with one command, as long as I can remember it, I can push all the changes to the web.\nThe syntax:\nrsync ^ -av # a to sync all, v for verbose mode --delete # will remove files that exist in the destination but not the source \u0026lt;source\u0026gt; \u0026lt;destination\u0026gt; Here is an example for updating this website. This will cause a ssh tunnel to be established and the sync will be placed in the remote folder on the far side of the :\nrsync -av ./public colin@chisholm.forestecosystems.ca:/home/colin/www/ Tip For commands that are run numerous times – put them in a file and run the file. In windows end the file with .bat. For linux make it executable chmod 755 filename.\n","date":1674086400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1674170938,"objectID":"c5c19f54c9b222b0d630e6f36d600eec","permalink":"https://chisholm.forestecosystems.ca/post/cli-that-i-always-forget/","publishdate":"2023-01-19T00:00:00Z","relpermalink":"/post/cli-that-i-always-forget/","section":"post","summary":"From linux But just remember – easy to run in windows (e.g. have an ubuntu terminal installed)\nfind trying to find where those files are?\nfind \u003cdir\u003e -name \"*pattern*\" ## use wildcards * Find files of a certain name/pattern/type – with the text pattern you are looking for.","tags":["linux","cloud","cli"],"title":"Useful Command-line functions... that I always forget","type":"post"},{"authors":[],"categories":["R","Docker"],"content":"Instructions below include Cleanup of existing docker Installation of a fresh RStudio Server via rocker/geospatial Ensuring the addition of needed packages Installation of SAGA-GIS in the new container Some visual tweaks Clean-up/Clear-out Docker On my windows machine docker ended up taking up way too much space (e.g. well over 80Gb) and was crowding my hard disk space. I have obviously assumed you know how to get docker running on windows, If you need to figure that out see Docker.com and I found this quick video on YouTube with simple and clear instructions.\nTo rectify this I had to reset Docker’s virtual disk as per M. Roussy.\nOpen Docker GUI Bug tab Clean/Purge data (select them all) These steps reduced the massive footprint that Docker was holding. Now I need to restore my go-to image.\nRStudio Server with geospatial packages Dockerhub is the place to find most any image that you can imagine. In my case I use Rstudio by posit with R and numerous geospatial packages for the R environment. I find this image has most of what I need:\nrocker/geospatial\nDownload the docker image.\nIn this example, I did not choose the lastest. As I want install additional packages going back a version-point may be more beneficial (e.g. to reduce occurrences of packages not being available for my version of R.) $docker pull rocker/geospatial:4.1.1 Create a new container docker run --name rockergeo ^ ## Name the container -d ## detached mode -v windows/folder:/home/rstudio ## share a file location with docker -p 8787:8787 ## port to view Rstudio Server -e PASSWORD=somepassword ## create the password -e TZ=\u0026#34;America/Vancouver\u0026#34; ## set the timezone rocker/geospatial:4.1.1 ## docker image to use -v can be used numerous times to link various locations. -e TZ I find this useful especially when generating reports. So the time generated is actually my time. A list of timezones is linked here Your docker container is now running. To use it open your web-browser and navigate to: http://localhost:8787.\nAdd additional packages Most likely not every package that you ever use is available in the default image, below I install what might be missing – based on my previous use of R.\nHopefully from another installation, or your past experience with R you have a list of packages that you use. To generate one:\n## Save current list of packages mypackages \u0026lt;- as.data.frame(installed.packages()[,c(1,3:4)]) write.csv(mypackages, \u0026#34;somewhere/mypackages.csv\u0026#34;) In the new docker session.\npks \u0026lt;- read.csv(\u0026#34;~/somewhere/mypackages.csv\u0026#34;) ## list from above ## installed already hav \u0026lt;- as.data.frame(installed.packages()[,c(1,3:4)]) ## to be installed intl \u0026lt;- setdiff(hav$Package, pks$Package) install.packages(intl) Rmarkdown tweaks Some updating will be needed, especially if generating PDF or TEX based documents run:\ntinytex::install_tinytex() Also, remember that the initial pdf builds will likely take a little extra time as TinyTex will install the needed TEX packages.\nInstall of SAGA-GIS I often use a number of SAGA-GIS modules. To make these available I need to:\nFrom host machine open a terminal/console: docker exec -ti rockergeo bash Update repositories and install SAGA ... (I should really sort out how to install the latest version of SAGA ...) sudo apt update sudo apt install saga Extra: Rstudio Themes I really like Garrick Buie’s rsthemes\ndevtools::install_github(\u0026#34;gadenbuie/rsthemes\u0026#34;) rsthemes::install_rsthemes(include_base16 = TRUE) To make quick changes to the theme I add the following to my global profile. Note that on a fresh install this may be a blank file.\n## to open the profile file usethis::edit_r_profile() add and save the following. Then restart R (CTRL + SHIFT + F10)\n## rsthemes from https://www.garrickadenbuie.com/project/rsthemes/ if (interactive()) { rsthemes::set_theme_light(\u0026#34;Solarized Light {rsthemes}\u0026#34;) rsthemes::set_theme_dark(\u0026#34;a11y-dark {rsthemes}\u0026#34;) rsthemes::set_theme_favorite( c(\u0026#34;Fairyfloss {rsthemes}\u0026#34;, #\u0026#34;Oceanic Plus {rsthemes}\u0026#34;, #\u0026#34;Nord Polar Night Aurora {rsthemes}\u0026#34;, \u0026#34;a11y-dark {rsthemes}\u0026#34;, \u0026#34;One Dark {rsthemes}\u0026#34;, \u0026#34;Solarized Dark {rsthemes}\u0026#34;, \u0026#34;base16 Unikitty Dark {rsthemes}\u0026#34;, \u0026#34;base16 Apathy {rsthemes}\u0026#34;, \u0026#34;base16 Flat {rsthemes}\u0026#34;, \u0026#34;Solarized Light {rsthemes}\u0026#34;, ### start light \u0026#34;base16 Atelier Lakeside Light {rsthemes}\u0026#34;, \u0026#34;base16 Atelier Seaside Light {rsthemes}\u0026#34; ) ) } Finally, As suggested on the website add a keyboard shortcut to switch themes. From the Rstudio menu: Tools \u0026gt;\u0026gt; Modify Keyboard Shortcuts .... Search for Next Favourite Theme and add a shortcut. I use Ctrl + Alt + N.\n","date":1671408000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1671467013,"objectID":"2d57ea8018a43fea3dc5a8d5316daabf","permalink":"https://chisholm.forestecosystems.ca/post/r-via-docker-fresh-start/","publishdate":"2022-12-19T00:00:00Z","relpermalink":"/post/r-via-docker-fresh-start/","section":"post","summary":"Instructions below include Cleanup of existing docker Installation of a fresh RStudio Server via rocker/geospatial Ensuring the addition of needed packages Installation of SAGA-GIS in the new container Some visual tweaks Clean-up/Clear-out Docker On my windows machine docker ended up taking up way too much space (e.","tags":[],"title":"R via Docker — A fresh start","type":"post"},{"authors":[],"categories":["git","R"],"content":"I have started getting into package development and finding the usethis package to be very useful. To smooth out some bumps with version control – really switching back and forth between console and terminal for git commits. Note: I don’t like to use the GUi’s Git tab – typing makes sure I really mean what I do.\nThe following is taken from the usethis documentation.\nlibrary(usethis) a. Initiate use of git (local)\nusethis::use_git() b. Default editor\nuse_git_config(core.editor = \u0026#34;nano\u0026#34;) c. Build connection with GitHub. This includes contact info and a personal access token. Finally git_sitrep() provides a report of how things are set.\nuse_git_config(user.name = \u0026#34;First Last\u0026#34;, user.email = \u0026#34;your.email@someplace.xyz\u0026#34;) create_github_token() ## will open up github to create a token gitcreds::gitcreds_set() ## paste in the new token git_sitrep() With the steps above any R functions relying on git should work without an issue.\nI did have one problem getting started where gitcreds::gitcreds_set() could not find git on my machine. To solve this I installed a updated version of git.\n","date":1668729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1668791336,"objectID":"2105d2f937f333fc650adfe37fca43a0","permalink":"https://chisholm.forestecosystems.ca/post/usethis-git-and-github/","publishdate":"2022-11-18T00:00:00Z","relpermalink":"/post/usethis-git-and-github/","section":"post","summary":"I have started getting into package development and finding the usethis package to be very useful. To smooth out some bumps with version control – really switching back and forth between console and terminal for git commits.","tags":[],"title":"usethis, git, and GitHub","type":"post"},{"authors":[],"categories":["R","packages"],"content":"I was asked to look into how to start documenting R package scripts, and building automating testing of those scripts (aka unit testing). The following provides the slides and some key resources that I used to answer these questions for the team.\nSlides Full screen presentation Use arrows to navigate slides (you may need to click on the slideshow for it to work).\rEssential packages install.packages(\u0026#34;devtools\u0026#34;) install.packages(\u0026#34;usethis\u0026#34;) install.packages(\u0026#34;testthat\u0026#34;) install.packages(\u0026#34;roxygen2\u0026#34;) Core Functions Create a new package: bcgovr::create_bcgov_package() Create a new script: usethis::use_r(\u0026#34;function\u0026#34;) Load and ad-hoc test scripts: devtools::load_all() (CTRL + SHIFT + L) Setup automatic - unit testing Start testing for the project: usethis::use_testthat() Start testing for a function: usethis::use_test(\u0026#34;function\u0026#34;) A couple simple tests: testthat::expect_equal() testthat::expect_error() review how much of your code is being tested: covr::report() Core documentation tags #\u0026#39; @title ## Implied #\u0026#39; @description ## Implied #\u0026#39; @details ## Implied #\u0026#39; @params ## What the function needs #\u0026#39; @return ## what the function returns #\u0026#39; @export ## makes the function available #\u0026#39; @examples ## Needs to actually have an examples Short-cut keys: CTRL + SHIFT + ALT + R … remember you need to have the cursor inside the function you are looking to document.\nKey Resources Key resources used:\nR Packages (2e) Getting started with unit testing in R usethis testthat roxygen2 bcgovr Sample Script Simple function The following was saved as: ~/R/pem_people.R\n#\u0026#39; PEM People #\u0026#39; #\u0026#39; PEM People are great! #\u0026#39; #\u0026#39; Takes a number and writes a sentance #\u0026#39; #\u0026#39; @param x A positive integer #\u0026#39; #\u0026#39; @return Returns a character string. #\u0026#39; #\u0026#39; @examples #\u0026#39; pem_people(4) pem_people \u0026lt;- function(x) { ## Error testing stopifnot(is.numeric(x), x == as.integer(x), x \u0026gt;= 0, length(x) == 1 ) if (x == 1) {pem_person(x)} else { paste(\u0026#34;There are\u0026#34;, x, \u0026#34;cool pem people in Smithers\u0026#34;) }} pem_person \u0026lt;- function(x){ paste(\u0026#34;There is\u0026#34;,x, \u0026#34;cool pem person in Smithers\u0026#34;) } Test script This test script was saved to: ~/tests/testthat/test-pem_people.R\ntest_that(\u0026#34;Grammar\u0026#34;, { expect_equal(pem_people(1), \u0026#34;There is 1 cool pem person in Smithers\u0026#34;) expect_equal(pem_people(5), \u0026#34;There are 5 cool pem people in Smithers\u0026#34;) }) test_that(\u0026#34;Errors\u0026#34;, { expect_error(pem_people(\u0026#34;one\u0026#34;)) expect_error(pem_people(1:4)) expect_error(pem_people(-1)) expect_error(pem_people(pi)) }) ","date":1668297600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1668359720,"objectID":"bd8d1b2bb04df5e849abdb45811fc2a1","permalink":"https://chisholm.forestecosystems.ca/post/r-packages-testing-and-documenting/","publishdate":"2022-11-13T00:00:00Z","relpermalink":"/post/r-packages-testing-and-documenting/","section":"post","summary":"I was asked to look into how to start documenting R package scripts, and building automating testing of those scripts (aka unit testing). The following provides the slides and some key resources that I used to answer these questions for the team.","tags":[],"title":"R packages: documentation and testing","type":"post"},{"authors":[],"categories":["R","RStudio","Docker"],"content":"I mainly run R through a Docker session. Recently. I wanted to try the latest version of RStudio with its new visual markdown editor. I am happy to say I was successful! Here are the steps:\nThe following steps will be done via a terminal interface. To start that: docker exec -ti \u0026lt;Rocker-Image-Name\u0026gt; bash\nDownload the lastest rstudio version: wget https://download2.rstudio.org/server/...bionic/amd64/rstudio-server-\u0026lt;version\u0026gt;.deb Stop the current rstudio server. Save any open files / projects suspend the current server: sudo rstudio-server suspend-all shutdown the current server: sudo rstudio-server offline Remove the current rstudio server (this removes the server program … not the data). sudo apt-get remove rstudio-server rstudio-server online Install the new server and start Install via gdebi^[If gdebi is not installed it can be installed via sudo apt-get install gdebi-core]. sudo gdebi rstudio-server-version.deb Start the server sudo rstudio-server online Instructions adapted from:\nhttps://rstudio.com/products/rstudio/download-server/debian-ubuntu/ https://support.rstudio.com/hc/en-us/articles/216079967-Upgrading-RStudio-Server ","date":1611619200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611681471,"objectID":"4e43f1e8431a90b7054d5bbe97a148bc","permalink":"https://chisholm.forestecosystems.ca/post/update-rstudio-in-docker-container/","publishdate":"2021-01-26T00:00:00Z","relpermalink":"/post/update-rstudio-in-docker-container/","section":"post","summary":"I mainly run R through a Docker session. Recently. I wanted to try the latest version of RStudio with its new visual markdown editor. I am happy to say I was successful!","tags":["R","RStudio","docker"],"title":"Update RStudio in Docker container","type":"post"},{"authors":[],"categories":["tech"],"content":"minor update below: troubleshooting with terminal interface.\nSo I started seeing things on twitter about using docker to run a standard version of R and with most the libraries I use on a regular basis already installed. I gave it a shot and now I need to sort this out even more – what a great tool! In addition, if you have a group of people using R on a project it should be quite simple to state the image to use or actually provide the image of R, Rstudio, and all the packages in one place.\nHere I am not going to attempt to explain what Docker is – try youtube for that. I will simply say that Docker is similar to running a virtual machine but with far less overhead.\nSteps to get Rstudio running Rocker. Install Docker Find the docker image that you want. I recommend using: rocker/geospatial. Though I will note that there is better documentation at the rocker/rstudio page. At the windows commandline (e.g. w. powershell) run the following (without the linebreaks or comments). docker run --name my_Rstudio ## name of your image -d ## detached mode -v windows/folder:/home/rstudio ## share a folder with docker image -p 8787:8787 ## port to view rstudio on -e PASSWORD=yourpasswordhere ## set a password rocker/geospatial ## the docker image to use Open your webrowser and goto http://localhost:8787/ Login and use R Use the Docker GUI to start and stop the instance. Access it using the docker whale icon Older Versions: R3.6 / GDAL / PROJ4 The coversion to PROJ6 seems to be causing some occasional grief. Some of the legacy PROJ4 projection details throw warnings when opening in a PROJ6 environment. Here is a docker install that provides earlier gdal and proj versions.\ndocker run --name myR_geo_3.6.1 -d -v windows/folder:/home/rstudio -p 8787:8787 -e PASSWORD=pithypasswd -e ROOT=TRUE rocker/geospatial:3.6.1 Troubleshooting with a terminal interface A couple times now I have had my Dockerized Rstudio session lockup on me. Restarting the image, Docker, and the computer all failed to work and I was forced to create a new docker image. However, this took time as I had installed additional packages and pdf document creation usually required installation of numerous other libraries … lots of time…\nHere is a far easier solution:\nOpen a bash shell (command line interface) for the Docker: docker exec -ti \u0026lt;DockerName\u0026gt; bash cd to /home/rstudio/.rstudio/sessions/active/ and delete all the files rm -R * This will loose data in the active session but it should get the rstudio server working again … Note: I never have Rstudio save my session environment. And as always save your work as you go! Up next Use QGIS and R together via a docker image. To get started see: Geocomputation in R in Docker. Fine tuning – make my own image that includes the additional libraries I like to use. Additional Resources https://www.rocker-project.org/ ","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602090717,"objectID":"26cef53290c7d6180e1d9b08a36fdbe5","permalink":"https://chisholm.forestecosystems.ca/post/first-use-of-docker/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/first-use-of-docker/","section":"post","summary":"minor update below: troubleshooting with terminal interface.\nSo I started seeing things on twitter about using docker to run a standard version of R and with most the libraries I use on a regular basis already installed.","tags":["docker","R","GIS"],"title":"First Use of Docker","type":"post"},{"authors":[],"categories":["R"],"content":"I have been using git for version control of my various projects including making local backups and versioning as well as for collaborative works utilizing github. Below I provide some simple notes on using git.\nBasic git To initialize a git project use git init or git clone _some url_\ngit status shows what has changed since the last update, including if there are differences with a collaborative project online (e.g. GitHub) git pull Pulls down updates from the server – this is an essential step. git add myfile Alternately use the -A flag to add all changes git commit -m \u0026#34;decribe what you are doing\u0026#34; applies the changed git push origin master Pushes your changes to the master branch on the server. git status this final step should report that no changes are needed and that the local repository (copy) is up-to-date Branching git branch NAMEofBRANCH this creates a the branch but it is not the active branch git checkout NAMEofBRANCH makes the branch the active one. git add -A stage all the recent changes git commit -m \u0026#34;blah blah ... explanation\u0026#34; commits the changes to the active branch now run through the steps above… note that everything is relative to the active branch Merging branches one day I will write this up too.\n","date":1583884800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583957213,"objectID":"7d8f1ea1194cb8ce9de57a759039508a","permalink":"https://chisholm.forestecosystems.ca/post/git-reminder/","publishdate":"2020-03-11T00:00:00Z","relpermalink":"/post/git-reminder/","section":"post","summary":"I have been using git for version control of my various projects including making local backups and versioning as well as for collaborative works utilizing github. Below I provide some simple notes on using git.","tags":["R"],"title":"Git Reminder","type":"post"},{"authors":[],"categories":["R"],"content":"For work and studies I have finally decided to take the plunge and start building an R-package.\nThe resources on how to do this:\nHilary Parker’s Writing and R package from scratch provides a short easy-to-get-started introduction. Karl Broman’s R package primer – a minimal tutorial Hadley Wickham’s R packages provides all the details. From H. Parker – copied here so I can find it again easily\nStep 0: Packages you will need The packages you will need to create a package are devtools and roxygen2. I am having you download the development version of the roxygen2 package.\ninstall.packages(\u0026#34;devtools\u0026#34;) library(\u0026#34;devtools\u0026#34;) devtools::install_github(\u0026#34;klutometis/roxygen\u0026#34;) library(roxygen2) Step 1: Create your package directory You are going to create a directory with the bare minimum folders of R packages. I am going to make a cat-themed package as an illustration.\nsetwd(\u0026#34;parent_directory\u0026#34;) create(\u0026#34;cats\u0026#34;) If you look in your parent directory, you will now have a folder called cats, and in it you will have two folders and one file called DESCRIPTION.\nYou should edit the DESCRIPTION file to include all of your contact information, etc.\nStep 2: Add functions If you’re reading this, you probably have functions that you’ve been meaning to create a package for. Copy those into your R folder. If you don’t, may I suggest something along the lines of:\ncat_function \u0026lt;- function(love=TRUE){ if(love==TRUE){ print(\u0026#34;I love cats!\u0026#34;) } else { print(\u0026#34;I am not a cool person.\u0026#34;) } } Save this as a cat_function.R to your R directory.\n(cats-package.r is auto-generated when you create the package.)\nStep 3: Add documentation This always seemed like the most intimidating step to me. I’m here to tell you — it’s super quick. The package roxygen2 that makes everything amazing and simple. The way it works is that you add special comments to the beginning of each function, that will later be compiled into the correct format for package documentation. The details can be found in the roxygen2 documentation — I will just provide an example for our cat function.\nThe comments you need to add at the beginning of the cat function are, for example, as follows:\n#\u0026#39; A Cat Function #\u0026#39; #\u0026#39; This function allows you to express your love of cats. #\u0026#39; @param love Do you love cats? Defaults to TRUE. #\u0026#39; @keywords cats #\u0026#39; @export #\u0026#39; @examples #\u0026#39; cat_function() cat_function \u0026lt;- function(love=TRUE){ if(love==TRUE){ print(\u0026#34;I love cats!\u0026#34;) } else { print(\u0026#34;I am not a cool person.\u0026#34;) } } I’m personally a fan of creating a new file for each function, but if you’d rather you can simply create new functions sequentially in one file — just make sure to add the documentation comments before each function.\nStep 4: Process your documentation Now you need to create the documentation from your annotations earlier. You’ve already done the “hard” work in Step 3. Step 4 is as easy doing this:\nsetwd(\u0026#34;./cats\u0026#34;) document() This automatically adds in the .Rd files to the man directory, and adds a NAMESPACE file to the main directory. You can read up more about these, but in terms of steps you need to take, you really don’t have to do anything further.\nStep 5: Install! Now it is as simple as installing the package! You need to run this from the parent working directory that contains the cats folder.\nsetwd(\u0026#34;..\u0026#34;) install(\u0026#34;cats\u0026#34;) Now you have a real, live, functioning R package. For example, try typing ?cat_function. You should see the standard help page pop up!\n(Bonus) Step 6: Make the package a GitHub repo This isn’t a post about learning to use git and GitHub — for that I recommend Karl Broman’s Git/GitHub Guide. The benefit, however, to putting your package onto GitHub is that you can use the devtools install_github() function to install your new package directly from the GitHub page.\ninstall_github(\u0026#39;cats\u0026#39;,\u0026#39;github_username\u0026#39;) ## This means you have it already loaded on GitHub ","date":1582329600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582329600,"objectID":"c6fe259cbe50329938ef87387cbf2027","permalink":"https://chisholm.forestecosystems.ca/post/creating-my-first-r-package/","publishdate":"2020-02-22T00:00:00Z","relpermalink":"/post/creating-my-first-r-package/","section":"post","summary":"For work and studies I have finally decided to take the plunge and start building an R-package.\nThe resources on how to do this:\nHilary Parker’s Writing and R package from scratch provides a short easy-to-get-started introduction.","tags":["R"],"title":"Creating my first R package","type":"post"},{"authors":[],"categories":["bookdown","writing","R"],"content":"I am really enjoying the power of bookdown to produce great documents that can be read as websites (i.e. html or gitbook output), pdf (generated via LaTeX), or other. However, when you start wanting to format your tables conflicts can occur causing all of some of the book to not render. Below I provide a quick solution.\nThe kableExtra package provides well documented and excellent features for formatting tables into whatever format you are generating.\nThis code snippet is what I use to generate to multiple formats simultaneously. Specifically, for my project I am writing an academic paper as a gitbook but I want pdf and docx versions available for collaborators and reviewers. Unfortuately, I have to create the table output three times, one for each type of document, but the results are excellent!\nif (knitr::is_latex_output()) { ## Latex Version knitr::kable(pw, caption = \u0026#34;Pairwise t-test comparison of all the treatments.\u0026#34;, align = \u0026#34;c\u0026#34;, format = \u0026#34;latex\u0026#34;, booktabs = T) %\u0026gt;% kable_styling(latex_options = c(\u0026#34;striped\u0026#34;, \u0026#34;scale_down\u0026#34;)) } else if (knitr::is_html_output()) { ## html version knitr::kable(pw, caption = \u0026#34;Pairwise t-test comparison of all the treatments.\u0026#34;, align = \u0026#34;c\u0026#34;, format = \u0026#34;html\u0026#34;) %\u0026gt;% kable_styling(bootstrap_options = \u0026#34;striped\u0026#34;, font_size = 8, ) } else { ## Word version knitr::kable(pw, caption = \u0026#34;Pairwise t-test comparison of all the treatments.\u0026#34;, align = \u0026#34;c\u0026#34;, format = \u0026#34;markdown\u0026#34;) } ","date":1580774400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1580850118,"objectID":"64e7dbf69e111ac6b204a7b9103ac5a3","permalink":"https://chisholm.forestecosystems.ca/post/multiple-table-versions-for-html-latex-or-other/","publishdate":"2020-02-04T00:00:00Z","relpermalink":"/post/multiple-table-versions-for-html-latex-or-other/","section":"post","summary":"I am really enjoying the power of bookdown to produce great documents that can be read as websites (i.e. html or gitbook output), pdf (generated via LaTeX), or other. However, when you start wanting to format your tables conflicts can occur causing all of some of the book to not render.","tags":["tables","bookdown","R"],"title":"Multiple table versions for html, LaTeX, or other","type":"post"},{"authors":[],"categories":["GIS","opensource","R","Software"],"content":"Authoring Citation Software Zotero: Your personal research assistant. Entering grad studies and beginning many weeks of reading this has revolutionized my life. Better Bibtex for Zotero keep an always up to date .bib file for integration with LaTeX or Rmarkdown citation. LaTeX I’m not totally convinced that I want to commit to LaTeX as Rmarkdown and bookdown do such nice jobs of it. That being said it is a great fallback. Escape GUI document writing and get using this typesetting system that has you focus on your words not on your formatting.\nMikTeX the engine of LaTeX TeXStudio that don’e call it this but essentially it is an IDE for LaTeX. GIS and Remote Sensing QGIS: On MS Windows I recommend using OSGEO4W installer to ensure that you get all the goodies and plugins. SAGA GIS: Although often bundled with the QGIS a newer version is available via https://sourceforge.net/projects/saga-gis/ LASTools: Very powerful set of tools for manipulating, using, and extracting additional data products from LiDAR. I have the privellage of using this through our lab’s accademic license. Quick Terrain Reader. Freeware - Great for displaying LAS data Stats R RStudio Rtools – essential if using packages that are in development (e.g. on GitHub) Essential Packages for R ## Stats and the tidyverse pk \u0026lt;- c(\u0026#34;tidyverse\u0026#34;, \u0026#34;psych\u0026#34;, \u0026#34;lme4\u0026#34;, \u0026#34;caret\u0026#34;) ## Geo-spatial analysis pk \u0026lt;- append(pk, c(\u0026#34;sf\u0026#34;, \u0026#34;sp\u0026#34;, \u0026#34;raster\u0026#34;, \u0026#34;stars\u0026#34;, \u0026#34;lwgeom\u0026#34;, \u0026#34;mapview\u0026#34;,\u0026#34;tmap\u0026#34;, \u0026#34;lidR\u0026#34;, \u0026#34;gdalcubes\u0026#34;)) ## Creating documents and interactive documents pk \u0026lt;- append(pk, c(\u0026#34;rmarkdown\u0026#34;, \u0026#34;bookdown\u0026#34;, \u0026#34;rmdformats\u0026#34;, \u0026#34;blogdown\u0026#34;, \u0026#34;rticles\u0026#34;)) ## Install the packages if this has not been done already new.packages \u0026lt;- pk[!(pk %in% installed.packages()[,\u0026#34;Package\u0026#34;])] if(length(new.packages)) install.packages(new.packages) someday I may get around to documenting how to make the above packages portable … mostly\nUtilities ConEmu: essential replacement of the windows CMD.exe shell. OK it’s more of an integration of that shell… but bettter. Kinesics Text Editor: like nano but for windows – great to have this coupled with ConEmu. Atom - excellent text editor! Really what does a text editor do… This one seems to be able to do anything you want! Syntax highlighting, Markdown preview. Integration with gitHub, …. GIT GitHub GUI a nice little program for viewing git changes – note can be used in git folders that are not uploaded to github. _Caution!! – I think it is actually better practice to use the commandline then to make changes with the GUI … It is very easy to get yourself in trouble with the GUI FreeCommander a replacement for windows file explorer. Allows 2 panes and some great file sync utilities. 7-zip A great file compression utility. When in windows don’t forget to install the commandline portion ","date":1578873600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578873600,"objectID":"c4bae2ba293a26407a9663a97f662fba","permalink":"https://chisholm.forestecosystems.ca/post/goto-software/","publishdate":"2020-01-13T00:00:00Z","relpermalink":"/post/goto-software/","section":"post","summary":"Authoring Citation Software Zotero: Your personal research assistant. Entering grad studies and beginning many weeks of reading this has revolutionized my life. Better Bibtex for Zotero keep an always up to date .","tags":["GIS","R","opensource"],"title":"My Goto Software","type":"post"},{"authors":[],"categories":["Bookdown","markdown","pandoc","writing"],"content":"There are a few things that I continually need to lookup how to do in R’s Bookdown\nCross Referencing I am constantly forgetting how to cross-reference in bookdown and rmarkdown. Below are some options for cross-referencing in bookdown and rmarkdown documents\nBookdown Bookdown’s referencing system is extensive. Though it can run into some trouble if sections are explicitly unnumbered using {-}.\n\u0026lt;!-- the info in curly brackets provides a tag to link to --\u0026gt; ## This is a subsection {#my-sub-section} ... Later in the text I can reference \\@ref(my-sub-section) For all the deals see: https://bookdown.org/yihui/bookdown/cross-references.html\nRmarkdown / markdown This method works when bookdown is not installed… though it does require some basic html coding\nStep 1: declare an anchor point This will create a point that can be referenced. Note that this can be placed anywhere in the document. Where bookdown above does this for sections this has more flexibility in being anywhere in the document.\n\u0026lt;!-- note: name= ---\u0026gt; \u0026lt;a name=\u0026#34;my-point-to-reference\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Step 2: Call the achor Here are two options\nMarkdown [Link to](#my-point-to-reference) HTML \u0026lt;a href=\u0026#34;#my-point-to-reference\u0026#34;\u0026gt;Link here\u0026lt;/a\u0026gt; Insert an Image – including figure reference \u0026#34;\u0026#39;{r SomeFigure, fig.caption = \u0026#34;Some caption here\u0026#34;} knitr::include_graphics(\u0026#34;images/knit-logo.png\u0026#34;) \u0026#34;\u0026#39; To reference the figure later use: \\@ref(fig:SomeFigure) – note that this refers the rmarkdown chunk label and is prefixed by fig:\n","date":1578614400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574185188,"objectID":"d1879baffd9c09286d232cae89907ae5","permalink":"https://chisholm.forestecosystems.ca/post/bookdown-essentials/","publishdate":"2020-01-10T00:00:00Z","relpermalink":"/post/bookdown-essentials/","section":"post","summary":"There are a few things that I continually need to lookup how to do in R’s Bookdown\nCross Referencing I am constantly forgetting how to cross-reference in bookdown and rmarkdown. Below are some options for cross-referencing in bookdown and rmarkdown documents","tags":["bookdown","rmarkdown","pandoc"],"title":"Cross referencing and other Bookdown essentials","type":"post"},{"authors":[],"categories":["stats","ANOVA"],"content":"\rA fellow grad student asked if I had ever done a repeated measures ANOVA. I went back to my stats labs and found some code in a .R script. Here I re-use and update that code within this markdown report to provide some commentary.\nScenario\rThe weights of moose calves from different regions are are compared over three time periods. 1. Using a repeated measures ANOVA we need to determine if the weights at each time interval are significantly different from one another.\nIs there a change in the weight of moose calves over the three time periods?\nNull hypothesis\rThe weights of the calves remain constant over time.\n\\[H_0 : \\mu_1 = \\mu_2 = \\mu_3\\]\nAnalysis\rThis analysis examined the change on weight of the moose calves over three time periods.\rHowever, this does not consider the influence of the eco regions. The independent variable is time\rwith 3 time periods and the dependent variables are the weight.\nLoad libraries\rlibrary(lsr)\rlibrary(car) #for levene test library(onewaytests) #for \u0026#39;Brown-Forsyth\u0026#39; and \u0026#39;Welch Test\u0026#39; library(reshape2) #to rearrange the date (i.e. melt)\rlibrary(tidyr) #to rearrange the data (i.e. gather)\rlibrary(moments) #for Skewness and Kurtosis library(nortest) #For testing normality\rlibrary(reshape2)\r#Libraries for Graphs library(qqplotr) # library extention to ggplot2 gives Q-Q ability library(ggplot2) # Utilizes ggplot 2 graphics library require(gridExtra) # used to plot 2 graphs side by side (using ggplot)\rlibrary(tidyverse)\rImport data\rThe data is imported and rearranged for analysis\n# myData \u0026lt;- read.csv(\u0026#34;./rawData/AnovaDatabase_Labels.csv\u0026#34;, header = TRUE)\rmyData \u0026lt;- read.csv(\u0026#34;e:/workspace/NRES776/Chisholm_LabProject2/Lab06_ANOVA/rawData/AnovaDatabase_Labels.csv\u0026#34;)\rweights \u0026lt;- myData %\u0026gt;% select(Weight1, Weight2, Weight3) %\u0026gt;% pivot_longer(Weight1: Weight3, names_to = \u0026#34;Period\u0026#34;, values_to = \u0026#34;Weights\u0026#34;) %\u0026gt;% mutate(Period = as.factor(Period)) ## need period as a factor for lm() analysis # activity2 \u0026lt;- myData[,c(\u0026#34;Weight1\u0026#34;, \u0026#34;Weight2\u0026#34;, \u0026#34;Weight3\u0026#34;)] ## just examine the weights\rknitr::kable(head(weights, 10),\rcaption = \u0026#34;First few weights in the data\u0026#34;) %\u0026gt;% kableExtra::kable_styling()\rTable 1: First few weights in the data\rPeriod\rWeights\rWeight1\r50\rWeight2\r48\rWeight3\r45\rWeight1\r47\rWeight2\r45\rWeight3\r44\rWeight1\r44\rWeight2\r39\rWeight3\r36\rWeight1\r47\rComplete ANOVA\ra \u0026lt;- lm(weights$Weights ~ weights$Period)\ra.aov \u0026lt;- anova(a)\rprint(a.aov)\r## Analysis of Variance Table\r## ## Response: weights$Weights\r## Df Sum Sq Mean Sq F value Pr(\u0026gt;F) ## weights$Period 2 365.87 182.933 6.1424 0.003197 **\r## Residuals 87 2591.03 29.782 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\rComplete Post-hoc test if the ANOVA is significant\rif (a.aov[1,\u0026#34;Pr(\u0026gt;F)\u0026#34;] \u0026lt; 0.05) {\rprint(\u0026#34;Post Hoc Analysis:\u0026#34;)\rpairwise.t.test(weights$Weights, weights$Period, p.adj = \u0026#34;bonferroni\u0026#34;)\r} else {\rprint(\u0026#34;H0 affirmed, no post hoc required\u0026#34;)\r}\r## [1] \u0026#34;Post Hoc Analysis:\u0026#34;\r## ## Pairwise comparisons using t tests with pooled SD ## ## data: weights$Weights and weights$Period ## ## Weight1 Weight2\r## Weight2 0.1852 - ## Weight3 0.0022 0.3340 ## ## P value adjustment method: bonferroni\rEta-squared – power test\retaSquared(a, type = 2, anova = FALSE)\r## eta.sq eta.sq.part\r## weights$Period 0.1237332 0.1237332\rResults\rA repeated measure ANOVA was showed that moose calf weights changed significantly over the three time periods (\\(F−value = 6.1424 [df: 2; 87 ]\\), \\(p−value : 0.0032\\)). Effect size calculated as medium to large (\\(\\eta^2 = 0.1237332\\)). A Post hoc analysis using the Bonferroni test2showed that the only significant difference in weights was between period 1 and period 3 (\\(p−value = 0.0022\\)).\nAdapted from Farhad Moghimehfar’s lab assignment↩\nThe Bonferroni test is a common and flexible test that is effective for a low number of paired data.↩\n","date":1576022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576098252,"objectID":"5a83b8c74ca5db72ac246ac271b507be","permalink":"https://chisholm.forestecosystems.ca/post/anova-one-way-repeated-measures/","publishdate":"2019-12-11T00:00:00Z","relpermalink":"/post/anova-one-way-repeated-measures/","section":"post","summary":"A fellow grad student asked if I had ever done a repeated measures ANOVA. I went back to my stats labs and found some code in a .R script. Here I re-use and update that code within this markdown report to provide some commentary.","tags":["stats"],"title":"ANOVA: one way repeated measures","type":"post"},{"authors":[],"categories":["Raster","GIS","R"],"content":"\rI am currently working on a project that involves machine learning to predict of ecological attributes across landscapes at fine spatial resolution. Our current list is consists of 80 covariates stacked together. To make predictions across the landscape significant tiling of the raster data is needed. However, the tiling process itself takes significant time and creates a tiled dataset in the thousands of tiles… There is another way!\nPseudo-tiles effectively run tiling opperations without having to generate numerous tile raster files1\rBelow I use two packages to create pseudo-tiles of the data.\nGSIF::getSpatialTiles is used to generate a polygon layer of tiles covering the area of interest.\rSTARS::read_stars can be used to load only a specific portion of each raster in the dataset.\rlibrary(tidyverse)\rlibrary(sf)\rlibrary(rgdal)\rlibrary(stars)\rlibrary(GSIF)\rlibrary(tmap)\rStep 1: Define the tiles\rLocate the data\rI have previously confirmed that all of these layers stack (i.e. raster::stack(cv_list))\n## list of rasters cv_list \u0026lt;- list.files(\u0026#34;e:/tmpGIS/PEM_cvs/\u0026#34;, pattern = \u0026#34;*.tif\u0026#34;,full.names = TRUE)\r# cv \u0026lt;- list.files(\u0026#34;c:/tmp\u0026#34;, pattern = \u0026#34;*.tif\u0026#34;, full.names = TRUE)\rcv_list \u0026lt;- cv_list[-(grep(cv_list, pattern = \u0026#34;xml\u0026#34;))] ## drop any associated xml files print(paste(\u0026#34;there are\u0026#34;, length(cv_list), \u0026#34;covariates in the list\u0026#34;))\r## [1] \u0026#34;there are 80 covariates in the list\u0026#34;\rThis next section is an adaptation of code provided by Tom Hengl.\n## make tiles # GSIF requires a GDAL object\rcv1 \u0026lt;- GDALinfo(cv_list[1]) ## just loads the header info p_tiles \u0026lt;- GSIF::getSpatialTiles(cv1, block.x = 1000, return.SpatialPolygons = TRUE)\rp_tiles \u0026lt;- st_as_sf(p_tiles) %\u0026gt;% mutate(id = row_number())\r# Create tabular description of tiles -- generates a table of the extents of each tile t_tiles \u0026lt;- GSIF::getSpatialTiles(cv1, block.x = 1000, return.SpatialPolygons = FALSE) %\u0026gt;%\rmutate(id = row_number())\rp_tiles \u0026lt;- left_join(p_tiles, t_tiles)\rThe attribute data provides all the information needed to generate a pseudo-tile.\nhead(as.data.frame(p_tiles) %\u0026gt;% dplyr::select(-geometry))\r## id xl yl xu yu offset.y offset.x region.dim.y region.dim.x\r## 1 1 552600 5983800 553600 5984800 4820 0 400 400\r## 2 2 553600 5983800 554600 5984800 4820 400 400 400\r## 3 3 554600 5983800 555600 5984800 4820 800 400 400\r## 4 4 555600 5983800 556600 5984800 4820 1200 400 400\r## 5 5 556600 5983800 557600 5984800 4820 1600 400 400\r## 6 6 557600 5983800 558600 5984800 4820 2000 400 400\rStep 2: Load Pseudo-tile\rSo other then defining what the tiles should be no tiles have actually been created. Now with the use of the stars package a tile can be loaded by specifying the pixel locations within the raster. Below tile number 167 is loaded\nr \u0026lt;- read_stars(cv_list, RasterIO = list(nXOff = t_tiles[167, \u0026#34;offset.x\u0026#34;],\rnYOff = t_tiles[167, \u0026#34;offset.y\u0026#34;],\rnXSize = t_tiles[167, \u0026#34;region.dim.x\u0026#34;],\rnYSize = t_tiles[167, \u0026#34;region.dim.y\u0026#34;]))\rplot(r[1])\rFigure 1: A tile extracted from a list of 80 covariate rasters\rNext steps\rModeling\rFor modeling a stars object can be simply converted to a data.frame, be passed to a model, and then returned to the stars object. Hmmmn … not sure these steps are even needed … might be able to pass the object directly to a model. If not then the below will work.\ndf.r \u0026lt;- as.data.frame ## convert to data.frame\rdf.r$uniform \u0026lt;- runif(nrow(df.r)) ## create a new attribute r$uniform \u0026lt;- df.r$uniform ## assign the attribute back to the stars object. Build function\rdone!\nI added tile_index() to the PEMgeneratr package. It takes a raster, and produces tiles of a specified pixel count (x by y). Here is an example:\nt \u0026lt;- PEMgeneratr::tile_index(cv_list[1], 1000)\rmap \u0026lt;- tm_shape(t) + tm_polygons(alpha = 0.25)\rtmap_leaflet(map)\rmy definition.↩\n","date":1575331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575417990,"objectID":"936dd688833bc2057da6703082c8dc3c","permalink":"https://chisholm.forestecosystems.ca/post/pseudo-tiling-of-rasters/","publishdate":"2019-12-03T00:00:00Z","relpermalink":"/post/pseudo-tiling-of-rasters/","section":"post","summary":"I am currently working on a project that involves machine learning to predict of ecological attributes across landscapes at fine spatial resolution. Our current list is consists of 80 covariates stacked together.","tags":["Raster","stars","GIS","R"],"title":"Pseudo tiling of rasters","type":"post"},{"authors":null,"categories":null,"content":"This work, part of my on-going Masters of Science studies, compares natural old forests with forests of varied harvest legacies ranging from 20 - 90 years since disturbance. In particular, Coarse woody debris (CWD), forms a critically important component of forested ecosystems providing key structures for habitat and nutrition for a plethora of organisms across the kingdoms of life. Forest structural components including: stand height, coarse woody debris loading, gaps, and snags are compared through empirical, and remotely sensed data. Aerial Laser Scanning and predictive modelling techniques are used to map these attributes. The long term recovery and quantifiable impacts of forest harvesting on the 3-dimensional attributes within forest stands and across forested landscapes is highlighted as we demonstrate that theses 3-dimensional stand structures are quantifiable and predictable.\n","date":1571529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571529600,"objectID":"fe401e66f93ca676e2fbc226a9174974","permalink":"https://chisholm.forestecosystems.ca/project/cwd/","publishdate":"2019-10-20T00:00:00Z","relpermalink":"/project/cwd/","section":"project","summary":"Examining harvest impacts on CWD","tags":["CWD","DWD","Forests","Ecology","Remote Sensing"],"title":"Mapping the Recovery of Coarse Woody Debris","type":"project"},{"authors":null,"categories":null,"content":"A collaborative research project examining the ability of Remote Sensing data to predict ecosystems at a fine spatial resolution Ecosystem classes, that is Site Series in British Columbia’s Biogeoclimatic ecosystem classification system (BC-BEC) where site series may be mapped to areas as small as 0.05 hectares – a suggested minimum mappable unit below which it is not operationally feasible to implement. Current standards for minimum mappable unit area is 0.25 ha.\nProject Collaborators Government Ministry of Forests Pam Dykstra, Forest Ecology Interpretations, project leader Will MacKenzie, Forest Ecology and Interpretations, [ADD Title], Smithers’ Deception Lake area pilot site Mike Ryan, Forest Ecology and Interpretations, [ADD Title], Kamloops’ Eagle Hills Pilot Site Gen Perkins Matthew Coghill Ministry of Environment Deepa Filatow, [Add title], advisor Chuck Balmer, [ADD title], advisor Academia University of Northern British Columbia (UNBC) Che Elkin, Mixedwood Ecology Chair Luiz Terezan, Graduate student Dalhousie University Brandon Hueng University of British Columbia (UBC) Nicolas Coops, Canada Research Chair in Remote Sensing, advisor Lukas Jaron, Graduate student Thompson Rivers University David Hill Aleza Lake Research Forest (ALRF), an operation research forest, initially established by government in 1924. Now independently managed. Associated with UNBC. An Colin Chisholm, Assistant Forest Manager, the research forest is the Prince George area’s pilot site. OpenGeoHub Foundation Tomislav Hengl Robert MacMillian ","date":1571529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571529600,"objectID":"e9444b876a5e3f530fb8db7311a3cb48","permalink":"https://chisholm.forestecosystems.ca/project/pem/","publishdate":"2019-10-20T00:00:00Z","relpermalink":"/project/pem/","section":"project","summary":"Predictive Ecosystem Mapping","tags":["Machine Learning","R","Forest","Ecology","Mapping","Remote Sensing"],"title":"Predictive Ecosystem Mapping","type":"project"},{"authors":["Colin Chisholm RPF"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://chisholm.forestecosystems.ca/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://chisholm.forestecosystems.ca/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Colin Chisholm RPF","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://chisholm.forestecosystems.ca/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Colin Chisholm RPF"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://chisholm.forestecosystems.ca/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]